syntax = "proto3";

option java_package = "de.firehead.mapstruct.spi.protobuf.test.protos";
option java_outer_classname = "TestProtos";

message TestProtoMessage {
  string stringField = 1;
  int32 intField = 2;
  int64 longField = 3;
  float floatField = 4;
  double doubleField = 5;
  bool booleanField = 6;
  bytes bytesField = 7;
  TestEnum enumField = 8;
  TestEnumWithoutPrefixes enumWithoutPrefixesField = 9;
  map<string, string> stringMapField = 10;
  map<string, int32> intMapField = 11;
  map<string, int64> longMapField = 12;
  map<string, float> floatMapField = 13;
  map<string, double> doubleMapField = 14;
  map<string, bool> boolMapField = 15;
  map<string, bytes> bytesMapField = 16;
  map<string, TestEnum> enumMapField = 17;
}

message DeepTestProtoMessage {
  TestProtoMessage testProtoMessagePlain = 1;
  repeated TestProtoMessage testProtoMessageList = 2;
  map<string, TestProtoMessage> testProtoMessageMap = 3;
}

// For enums there are two slightly different naming conventions in use: one requires
// a name-dependent prefix only on the _UNSPECIFIED default value, and another one
// requires this prefix on all values (to avoid value name conflicts). These should
// both be handled correctly.

enum TestEnum {
  TEST_ENUM_UNSPECIFIED = 0;
  TEST_ENUM_VALUE = 1;
}

enum TestEnumWithoutPrefixes {
  TEST_ENUM_WITHOUT_PREFIXES_UNSPECIFIED = 0;
  VALUE = 1;
}
